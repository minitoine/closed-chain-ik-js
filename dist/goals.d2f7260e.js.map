{"mappings":"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","sources":["node_modules/three/examples/jsm/controls/OrbitControls.js","node_modules/three/examples/jsm/controls/TransformControls.js","node_modules/three/examples/jsm/libs/stats.module.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","import {\n\tBoxGeometry,\n\tBufferGeometry,\n\tCylinderGeometry,\n\tDoubleSide,\n\tEuler,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tOctahedronGeometry,\n\tPlaneGeometry,\n\tQuaternion,\n\tRaycaster,\n\tSphereGeometry,\n\tTorusGeometry,\n\tVector3\n} from 'three';\n\nconst _raycaster = new Raycaster();\n\nconst _tempVector = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempQuaternion = new Quaternion();\nconst _unit = {\n\tX: new Vector3( 1, 0, 0 ),\n\tY: new Vector3( 0, 1, 0 ),\n\tZ: new Vector3( 0, 0, 1 )\n};\n\nconst _changeEvent = { type: 'change' };\nconst _mouseDownEvent = { type: 'mouseDown' };\nconst _mouseUpEvent = { type: 'mouseUp', mode: null };\nconst _objectChangeEvent = { type: 'objectChange' };\n\nclass TransformControls extends Object3D {\n\n\tconstructor( camera, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\n\t\t\tdomElement = document;\n\n\t\t}\n\n\t\tthis.visible = false;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\tconst _gizmo = new TransformControlsGizmo();\n\t\tthis._gizmo = _gizmo;\n\t\tthis.add( _gizmo );\n\n\t\tconst _plane = new TransformControlsPlane();\n\t\tthis._plane = _plane;\n\t\tthis.add( _plane );\n\n\t\tconst scope = this;\n\n\t\t// Defined getter, setter and store for a property\n\t\tfunction defineProperty( propName, defaultValue ) {\n\n\t\t\tlet propValue = defaultValue;\n\n\t\t\tObject.defineProperty( scope, propName, {\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tif ( propValue !== value ) {\n\n\t\t\t\t\t\tpropValue = value;\n\t\t\t\t\t\t_plane[ propName ] = value;\n\t\t\t\t\t\t_gizmo[ propName ] = value;\n\n\t\t\t\t\t\tscope.dispatchEvent( { type: propName + '-changed', value: value } );\n\t\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tscope[ propName ] = defaultValue;\n\t\t\t_plane[ propName ] = defaultValue;\n\t\t\t_gizmo[ propName ] = defaultValue;\n\n\t\t}\n\n\t\t// Define properties with getters/setter\n\t\t// Setting the defined property will automatically trigger change event\n\t\t// Defined properties are passed down to gizmo and plane\n\n\t\tdefineProperty( 'camera', camera );\n\t\tdefineProperty( 'object', undefined );\n\t\tdefineProperty( 'enabled', true );\n\t\tdefineProperty( 'axis', null );\n\t\tdefineProperty( 'mode', 'translate' );\n\t\tdefineProperty( 'translationSnap', null );\n\t\tdefineProperty( 'rotationSnap', null );\n\t\tdefineProperty( 'scaleSnap', null );\n\t\tdefineProperty( 'space', 'world' );\n\t\tdefineProperty( 'size', 1 );\n\t\tdefineProperty( 'dragging', false );\n\t\tdefineProperty( 'showX', true );\n\t\tdefineProperty( 'showY', true );\n\t\tdefineProperty( 'showZ', true );\n\n\t\t// Reusable utility variables\n\n\t\tconst worldPosition = new Vector3();\n\t\tconst worldPositionStart = new Vector3();\n\t\tconst worldQuaternion = new Quaternion();\n\t\tconst worldQuaternionStart = new Quaternion();\n\t\tconst cameraPosition = new Vector3();\n\t\tconst cameraQuaternion = new Quaternion();\n\t\tconst pointStart = new Vector3();\n\t\tconst pointEnd = new Vector3();\n\t\tconst rotationAxis = new Vector3();\n\t\tconst rotationAngle = 0;\n\t\tconst eye = new Vector3();\n\n\t\t// TODO: remove properties unused in plane and gizmo\n\n\t\tdefineProperty( 'worldPosition', worldPosition );\n\t\tdefineProperty( 'worldPositionStart', worldPositionStart );\n\t\tdefineProperty( 'worldQuaternion', worldQuaternion );\n\t\tdefineProperty( 'worldQuaternionStart', worldQuaternionStart );\n\t\tdefineProperty( 'cameraPosition', cameraPosition );\n\t\tdefineProperty( 'cameraQuaternion', cameraQuaternion );\n\t\tdefineProperty( 'pointStart', pointStart );\n\t\tdefineProperty( 'pointEnd', pointEnd );\n\t\tdefineProperty( 'rotationAxis', rotationAxis );\n\t\tdefineProperty( 'rotationAngle', rotationAngle );\n\t\tdefineProperty( 'eye', eye );\n\n\t\tthis._offset = new Vector3();\n\t\tthis._startNorm = new Vector3();\n\t\tthis._endNorm = new Vector3();\n\t\tthis._cameraScale = new Vector3();\n\n\t\tthis._parentPosition = new Vector3();\n\t\tthis._parentQuaternion = new Quaternion();\n\t\tthis._parentQuaternionInv = new Quaternion();\n\t\tthis._parentScale = new Vector3();\n\n\t\tthis._worldScaleStart = new Vector3();\n\t\tthis._worldQuaternionInv = new Quaternion();\n\t\tthis._worldScale = new Vector3();\n\n\t\tthis._positionStart = new Vector3();\n\t\tthis._quaternionStart = new Quaternion();\n\t\tthis._scaleStart = new Vector3();\n\n\t\tthis._getPointer = getPointer.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerHover = onPointerHover.bind( this );\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t// updateMatrixWorld  updates key transformation variables\n\tupdateMatrixWorld() {\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\tif ( this.object.parent === null ) {\n\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n\t\t\t} else {\n\n\t\t\t\tthis.object.parent.matrixWorld.decompose( this._parentPosition, this._parentQuaternion, this._parentScale );\n\n\t\t\t}\n\n\t\t\tthis.object.matrixWorld.decompose( this.worldPosition, this.worldQuaternion, this._worldScale );\n\n\t\t\tthis._parentQuaternionInv.copy( this._parentQuaternion ).invert();\n\t\t\tthis._worldQuaternionInv.copy( this.worldQuaternion ).invert();\n\n\t\t}\n\n\t\tthis.camera.updateMatrixWorld();\n\t\tthis.camera.matrixWorld.decompose( this.cameraPosition, this.cameraQuaternion, this._cameraScale );\n\n\t\tthis.eye.copy( this.cameraPosition ).sub( this.worldPosition ).normalize();\n\n\t\tsuper.updateMatrixWorld( this );\n\n\t}\n\n\tpointerHover( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst intersect = intersectObjectWithRay( this._gizmo.picker[ this.mode ], _raycaster );\n\n\t\tif ( intersect ) {\n\n\t\t\tthis.axis = intersect.object.name;\n\n\t\t} else {\n\n\t\t\tthis.axis = null;\n\n\t\t}\n\n\t}\n\n\tpointerDown( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\n\n\t\tif ( this.axis !== null ) {\n\n\t\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\t\tif ( planeIntersect ) {\n\n\t\t\t\tthis.object.updateMatrixWorld();\n\t\t\t\tthis.object.parent.updateMatrixWorld();\n\n\t\t\t\tthis._positionStart.copy( this.object.position );\n\t\t\t\tthis._quaternionStart.copy( this.object.quaternion );\n\t\t\t\tthis._scaleStart.copy( this.object.scale );\n\n\t\t\t\tthis.object.matrixWorld.decompose( this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart );\n\n\t\t\t\tthis.pointStart.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\t\t}\n\n\t\t\tthis.dragging = true;\n\t\t\t_mouseDownEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseDownEvent );\n\n\t\t}\n\n\t}\n\n\tpointerMove( pointer ) {\n\n\t\tconst axis = this.axis;\n\t\tconst mode = this.mode;\n\t\tconst object = this.object;\n\t\tlet space = this.space;\n\n\t\tif ( mode === 'scale' ) {\n\n\t\t\tspace = 'local';\n\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n\t\t\tspace = 'world';\n\n\t\t}\n\n\t\tif ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\tif ( ! planeIntersect ) return;\n\n\t\tthis.pointEnd.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\tif ( mode === 'translate' ) {\n\n\t\t\t// Apply translate\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t}\n\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) this._offset.x = 0;\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) this._offset.y = 0;\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) this._offset.z = 0;\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._quaternionStart ).divide( this._parentScale );\n\n\t\t\t} else {\n\n\t\t\t\tthis._offset.applyQuaternion( this._parentQuaternionInv ).divide( this._parentScale );\n\n\t\t\t}\n\n\t\t\tobject.position.copy( this._offset ).add( this._positionStart );\n\n\t\t\t// Apply translation snap\n\n\t\t\tif ( this.translationSnap ) {\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( this._quaternionStart ).invert() );\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.position.applyQuaternion( this._quaternionStart );\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'world' ) {\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'scale' ) {\n\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\n\n\t\t\t\tlet d = this.pointEnd.length() / this.pointStart.length();\n\n\t\t\t\tif ( this.pointEnd.dot( this.pointStart ) < 0 ) d *= - 1;\n\n\t\t\t\t_tempVector2.set( d, d, d );\n\n\t\t\t} else {\n\n\t\t\t\t_tempVector.copy( this.pointStart );\n\t\t\t\t_tempVector2.copy( this.pointEnd );\n\n\t\t\t\t_tempVector.applyQuaternion( this._worldQuaternionInv );\n\t\t\t\t_tempVector2.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t\t_tempVector2.divide( _tempVector );\n\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.x = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.y = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.z = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply scale\n\n\t\t\tobject.scale.copy( this._scaleStart ).multiply( _tempVector2 );\n\n\t\t\tif ( this.scaleSnap ) {\n\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'rotate' ) {\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tconst ROTATION_SPEED = 20 / this.worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n\t\t\tif ( axis === 'E' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this.eye );\n\t\t\t\tthis.rotationAngle = this.pointEnd.angleTo( this.pointStart );\n\n\t\t\t\tthis._startNorm.copy( this.pointStart ).normalize();\n\t\t\t\tthis._endNorm.copy( this.pointEnd ).normalize();\n\n\t\t\t\tthis.rotationAngle *= ( this._endNorm.cross( this._startNorm ).dot( this.eye ) < 0 ? 1 : - 1 );\n\n\t\t\t} else if ( axis === 'XYZE' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this._offset ).cross( this.eye ).normalize();\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.copy( this.rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n\t\t\t\tthis.rotationAxis.copy( _unit[ axis ] );\n\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.cross( this.eye ).normalize() ) * ROTATION_SPEED;\n\n\t\t\t}\n\n\t\t\t// Apply rotation snap\n\n\t\t\tif ( this.rotationSnap ) this.rotationAngle = Math.round( this.rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n\t\t\t// Apply rotate\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n\t\t\t\tobject.quaternion.copy( this._quaternionStart );\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) ).normalize();\n\n\t\t\t} else {\n\n\t\t\t\tthis.rotationAxis.applyQuaternion( this._parentQuaternionInv );\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) );\n\t\t\t\tobject.quaternion.multiply( this._quaternionStart ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( _changeEvent );\n\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t}\n\n\tpointerUp( pointer ) {\n\n\t\tif ( pointer.button !== 0 ) return;\n\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\n\n\t\t\t_mouseUpEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseUpEvent );\n\n\t\t}\n\n\t\tthis.dragging = false;\n\t\tthis.axis = null;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\tthis.traverse( function ( child ) {\n\n\t\t\tif ( child.geometry ) child.geometry.dispose();\n\t\t\tif ( child.material ) child.material.dispose();\n\n\t\t} );\n\n\t}\n\n\t// Set current object\n\tattach( object ) {\n\n\t\tthis.object = object;\n\t\tthis.visible = true;\n\n\t\treturn this;\n\n\t}\n\n\t// Detatch from object\n\tdetach() {\n\n\t\tthis.object = undefined;\n\t\tthis.visible = false;\n\t\tthis.axis = null;\n\n\t\treturn this;\n\n\t}\n\n\treset() {\n\n\t\tif ( ! this.enabled ) return;\n\n\t\tif ( this.dragging ) {\n\n\t\t\tthis.object.position.copy( this._positionStart );\n\t\t\tthis.object.quaternion.copy( this._quaternionStart );\n\t\t\tthis.object.scale.copy( this._scaleStart );\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\t\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t\t\tthis.pointStart.copy( this.pointEnd );\n\n\t\t}\n\n\t}\n\n\tgetRaycaster() {\n\n\t\treturn _raycaster;\n\n\t}\n\n\t// TODO: deprecate\n\n\tgetMode() {\n\n\t\treturn this.mode;\n\n\t}\n\n\tsetMode( mode ) {\n\n\t\tthis.mode = mode;\n\n\t}\n\n\tsetTranslationSnap( translationSnap ) {\n\n\t\tthis.translationSnap = translationSnap;\n\n\t}\n\n\tsetRotationSnap( rotationSnap ) {\n\n\t\tthis.rotationSnap = rotationSnap;\n\n\t}\n\n\tsetScaleSnap( scaleSnap ) {\n\n\t\tthis.scaleSnap = scaleSnap;\n\n\t}\n\n\tsetSize( size ) {\n\n\t\tthis.size = size;\n\n\t}\n\n\tsetSpace( space ) {\n\n\t\tthis.space = space;\n\n\t}\n\n\tupdate() {\n\n\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\n\n\t}\n\n}\n\nTransformControls.prototype.isTransformControls = true;\n\n// mouse / touch event handlers\n\nfunction getPointer( event ) {\n\n\tif ( this.domElement.ownerDocument.pointerLockElement ) {\n\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tbutton: event.button\n\t\t};\n\n\t} else {\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\n\t\treturn {\n\t\t\tx: ( event.clientX - rect.left ) / rect.width * 2 - 1,\n\t\t\ty: - ( event.clientY - rect.top ) / rect.height * 2 + 1,\n\t\t\tbutton: event.button\n\t\t};\n\n\t}\n\n}\n\nfunction onPointerHover( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tswitch ( event.pointerType ) {\n\n\t\tcase 'mouse':\n\t\tcase 'pen':\n\t\t\tthis.pointerHover( this._getPointer( event ) );\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tif ( ! document.pointerLockElement ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t}\n\n\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerHover( this._getPointer( event ) );\n\tthis.pointerDown( this._getPointer( event ) );\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.pointerMove( this._getPointer( event ) );\n\n}\n\nfunction onPointerUp( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerUp( this._getPointer( event ) );\n\n}\n\nfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\n\n\tconst allIntersections = raycaster.intersectObject( object, true );\n\n\tfor ( let i = 0; i < allIntersections.length; i ++ ) {\n\n\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\n\n\t\t\treturn allIntersections[ i ];\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\n//\n\n// Reusable utility variables\n\nconst _tempEuler = new Euler();\nconst _alignVector = new Vector3( 0, 1, 0 );\nconst _zeroVector = new Vector3( 0, 0, 0 );\nconst _lookAtMatrix = new Matrix4();\nconst _tempQuaternion2 = new Quaternion();\nconst _identityQuaternion = new Quaternion();\nconst _dirVector = new Vector3();\nconst _tempMatrix = new Matrix4();\n\nconst _unitX = new Vector3( 1, 0, 0 );\nconst _unitY = new Vector3( 0, 1, 0 );\nconst _unitZ = new Vector3( 0, 0, 1 );\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _v3 = new Vector3();\n\nclass TransformControlsGizmo extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'TransformControlsGizmo';\n\n\t\t// shared materials\n\n\t\tconst gizmoMaterial = new MeshBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\tconst gizmoLineMaterial = new LineBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\t// Make unique material for each axis/color\n\n\t\tconst matInvisible = gizmoMaterial.clone();\n\t\tmatInvisible.opacity = 0.15;\n\n\t\tconst matHelper = gizmoLineMaterial.clone();\n\t\tmatHelper.opacity = 0.5;\n\n\t\tconst matRed = gizmoMaterial.clone();\n\t\tmatRed.color.setHex( 0xff0000 );\n\n\t\tconst matGreen = gizmoMaterial.clone();\n\t\tmatGreen.color.setHex( 0x00ff00 );\n\n\t\tconst matBlue = gizmoMaterial.clone();\n\t\tmatBlue.color.setHex( 0x0000ff );\n\n\t\tconst matRedTransparent = gizmoMaterial.clone();\n\t\tmatRedTransparent.color.setHex( 0xff0000 );\n\t\tmatRedTransparent.opacity = 0.5;\n\n\t\tconst matGreenTransparent = gizmoMaterial.clone();\n\t\tmatGreenTransparent.color.setHex( 0x00ff00 );\n\t\tmatGreenTransparent.opacity = 0.5;\n\n\t\tconst matBlueTransparent = gizmoMaterial.clone();\n\t\tmatBlueTransparent.color.setHex( 0x0000ff );\n\t\tmatBlueTransparent.opacity = 0.5;\n\n\t\tconst matWhiteTransparent = gizmoMaterial.clone();\n\t\tmatWhiteTransparent.opacity = 0.25;\n\n\t\tconst matYellowTransparent = gizmoMaterial.clone();\n\t\tmatYellowTransparent.color.setHex( 0xffff00 );\n\t\tmatYellowTransparent.opacity = 0.25;\n\n\t\tconst matYellow = gizmoMaterial.clone();\n\t\tmatYellow.color.setHex( 0xffff00 );\n\n\t\tconst matGray = gizmoMaterial.clone();\n\t\tmatGray.color.setHex( 0x787878 );\n\n\t\t// reusable geometry\n\n\t\tconst arrowGeometry = new CylinderGeometry( 0, 0.04, 0.1, 12 );\n\t\tarrowGeometry.translate( 0, 0.05, 0 );\n\n\t\tconst scaleHandleGeometry = new BoxGeometry( 0.08, 0.08, 0.08 );\n\t\tscaleHandleGeometry.translate( 0, 0.04, 0 );\n\n\t\tconst lineGeometry = new BufferGeometry();\n\t\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n\t\tconst lineGeometry2 = new CylinderGeometry( 0.0075, 0.0075, 0.5, 3 );\n\t\tlineGeometry2.translate( 0, 0.25, 0 );\n\n\t\tfunction CircleGeometry( radius, arc ) {\n\n\t\t\tconst geometry = new TorusGeometry( radius, 0.0075, 3, 64, arc * Math.PI * 2 );\n\t\t\tgeometry.rotateY( Math.PI / 2 );\n\t\t\tgeometry.rotateX( Math.PI / 2 );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\t\tfunction TranslateHelperGeometry() {\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\t\tconst gizmoTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, - 0.5, 0 ], [ Math.PI, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), null, [ Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent.clone() ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.2, 0 ), matInvisible ) ]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperTranslate = {\n\t\t\tSTART: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tEND: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tDELTA: [\n\t\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 1 ), matGray ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matRed ) ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matGreen ), null, [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matBlue ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.75, 1 ), matYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperRotate = {\n\t\t\tAXIS: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( new SphereGeometry( 0.25, 10, 8 ), matInvisible ) ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.75, 0.1, 2, 24 ), matInvisible ) ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, - 0.5, 0 ], [ 0, 0, Math.PI ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.1, 0.1, 0.1 ), matWhiteTransparent.clone() ) ],\n\t\t\t]\n\t\t};\n\n\t\tconst pickerScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]],\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 0 ]],\n\t\t\t]\n\t\t};\n\n\t\tconst helperScale = {\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\t// Creates an Object3D with gizmos described in custom hierarchy definition.\n\n\t\tfunction setupGizmo( gizmoMap ) {\n\n\t\t\tconst gizmo = new Object3D();\n\n\t\t\tfor ( const name in gizmoMap ) {\n\n\t\t\t\tfor ( let i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\t\tconst object = gizmoMap[ name ][ i ][ 0 ].clone();\n\t\t\t\t\tconst position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\t\tconst rotation = gizmoMap[ name ][ i ][ 2 ];\n\t\t\t\t\tconst scale = gizmoMap[ name ][ i ][ 3 ];\n\t\t\t\t\tconst tag = gizmoMap[ name ][ i ][ 4 ];\n\n\t\t\t\t\t// name and tag properties are essential for picking and updating logic.\n\t\t\t\t\tobject.name = name;\n\t\t\t\t\tobject.tag = tag;\n\n\t\t\t\t\tif ( position ) {\n\n\t\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( rotation ) {\n\n\t\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( scale ) {\n\n\t\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t\tconst tempGeometry = object.geometry.clone();\n\t\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\n\t\t\t\t\tobject.geometry = tempGeometry;\n\t\t\t\t\tobject.renderOrder = Infinity;\n\n\t\t\t\t\tobject.position.set( 0, 0, 0 );\n\t\t\t\t\tobject.rotation.set( 0, 0, 0 );\n\t\t\t\t\tobject.scale.set( 1, 1, 1 );\n\n\t\t\t\t\tgizmo.add( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn gizmo;\n\n\t\t}\n\n\t\t// Gizmo creation\n\n\t\tthis.gizmo = {};\n\t\tthis.picker = {};\n\t\tthis.helper = {};\n\n\t\tthis.add( this.gizmo[ 'translate' ] = setupGizmo( gizmoTranslate ) );\n\t\tthis.add( this.gizmo[ 'rotate' ] = setupGizmo( gizmoRotate ) );\n\t\tthis.add( this.gizmo[ 'scale' ] = setupGizmo( gizmoScale ) );\n\t\tthis.add( this.picker[ 'translate' ] = setupGizmo( pickerTranslate ) );\n\t\tthis.add( this.picker[ 'rotate' ] = setupGizmo( pickerRotate ) );\n\t\tthis.add( this.picker[ 'scale' ] = setupGizmo( pickerScale ) );\n\t\tthis.add( this.helper[ 'translate' ] = setupGizmo( helperTranslate ) );\n\t\tthis.add( this.helper[ 'rotate' ] = setupGizmo( helperRotate ) );\n\t\tthis.add( this.helper[ 'scale' ] = setupGizmo( helperScale ) );\n\n\t\t// Pickers should be hidden always\n\n\t\tthis.picker[ 'translate' ].visible = false;\n\t\tthis.picker[ 'rotate' ].visible = false;\n\t\tthis.picker[ 'scale' ].visible = false;\n\n\t}\n\n\t// updateMatrixWorld will update transformations and appearance of individual handles\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst space = ( this.mode === 'scale' ) ? 'local' : this.space; // scale always oriented to local rotation\n\n\t\tconst quaternion = ( space === 'local' ) ? this.worldQuaternion : _identityQuaternion;\n\n\t\t// Show only gizmos for current transform mode\n\n\t\tthis.gizmo[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.gizmo[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.gizmo[ 'scale' ].visible = this.mode === 'scale';\n\n\t\tthis.helper[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.helper[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.helper[ 'scale' ].visible = this.mode === 'scale';\n\n\n\t\tlet handles = [];\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\n\n\t\tfor ( let i = 0; i < handles.length; i ++ ) {\n\n\t\t\tconst handle = handles[ i ];\n\n\t\t\t// hide aligned to camera\n\n\t\t\thandle.visible = true;\n\t\t\thandle.rotation.set( 0, 0, 0 );\n\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\tlet factor;\n\n\t\t\tif ( this.camera.isOrthographicCamera ) {\n\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\n\n\t\t\t} else {\n\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\n\n\t\t\t}\n\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 4 );\n\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\n\n\t\t\tif ( handle.tag === 'helper' ) {\n\n\t\t\t\thandle.visible = false;\n\n\t\t\t\tif ( handle.name === 'AXIS' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = !! this.axis;\n\n\t\t\t\t\tif ( this.axis === 'X' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Y' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, Math.PI / 2 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Z' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\t_alignVector.copy( this.rotationAxis );\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( _zeroVector, _alignVector, _unitY ) );\n\t\t\t\t\t\thandle.quaternion.multiply( _tempQuaternion );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'E' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else if ( handle.name === 'START' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'END' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPosition );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\n\t\t\t\t\t_tempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\n\t\t\t\t\thandle.scale.copy( _tempVector );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\t\tif ( this.dragging ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis ) {\n\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// If updating helper, skip rest of the loop\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Align handles to current local or world rotation\n\n\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n\t\t\t\t// Hide translate and scale axis facing the camera\n\n\t\t\t\tconst AXIS_HIDE_TRESHOLD = 0.99;\n\t\t\t\tconst PLANE_HIDE_TRESHOLD = 0.2;\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XY' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'YZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.mode === 'rotate' ) {\n\n\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\t_tempQuaternion2.copy( quaternion );\n\t\t\t\t_alignVector.copy( this.eye ).applyQuaternion( _tempQuaternion.copy( quaternion ).invert() );\n\n\t\t\t\tif ( handle.name.search( 'E' ) !== - 1 ) {\n\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( this.eye, _zeroVector, _unitY ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitX, Math.atan2( - _alignVector.y, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitY, Math.atan2( _alignVector.x, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitZ, Math.atan2( _alignVector.y, _alignVector.x ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Hide disabled axes\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'X' ) === - 1 || this.showX );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Y' ) === - 1 || this.showY );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Z' ) === - 1 || this.showZ );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'E' ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n\t\t\t// highlight selected axis\n\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\n\n\t\t\thandle.material.color.copy( handle.material._color );\n\t\t\thandle.material.opacity = handle.material._opacity;\n\n\t\t\tif ( this.enabled && this.axis ) {\n\n\t\t\t\tif ( handle.name === this.axis ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\n\n\t\t\t\t\treturn handle.name === a;\n\n\t\t\t\t} ) ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nTransformControlsGizmo.prototype.isTransformControlsGizmo = true;\n\n//\n\nclass TransformControlsPlane extends Mesh {\n\n\tconstructor() {\n\n\t\tsuper(\n\t\t\tnew PlaneGeometry( 100000, 100000, 2, 2 ),\n\t\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\n\t\t);\n\n\t\tthis.type = 'TransformControlsPlane';\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet space = this.space;\n\n\t\tthis.position.copy( this.worldPosition );\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\t_v1.copy( _unitX ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v2.copy( _unitY ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v3.copy( _unitZ ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\n\t\t// Align the plane for current transform mode, axis and space.\n\n\t\t_alignVector.copy( _v2 );\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'translate':\n\t\t\tcase 'scale':\n\t\t\t\tswitch ( this.axis ) {\n\n\t\t\t\t\tcase 'X':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v1 );\n\t\t\t\t\t\t_dirVector.copy( _v1 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Y':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v2 );\n\t\t\t\t\t\t_dirVector.copy( _v2 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v3 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XY':\n\t\t\t\t\t\t_dirVector.copy( _v3 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'YZ':\n\t\t\t\t\t\t_dirVector.copy( _v1 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XZ':\n\t\t\t\t\t\t_alignVector.copy( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v2 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XYZ':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\t\t_dirVector.set( 0, 0, 0 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\tdefault:\n\t\t\t\t// special case for rotate\n\t\t\t\t_dirVector.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( _dirVector.length() === 0 ) {\n\n\t\t\t// If in rotate mode, make the plane parallel to camera\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\n\n\t\t} else {\n\n\t\t\t_tempMatrix.lookAt( _tempVector.set( 0, 0, 0 ), _dirVector, _alignVector );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _tempMatrix );\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nTransformControlsPlane.prototype.isTransformControlsPlane = true;\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n","var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n"],"names":["$443c013b983d0324$var$_changeEvent","type","$443c013b983d0324$var$_startEvent","$443c013b983d0324$var$_endEvent","$443c013b983d0324$export$8ff7788029dfdf52","$ilwiq","EventDispatcher","object","domElement1","super","undefined","console","warn","document","error","this","domElement","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","i","splice","pointer","passive","$b9499708d6cce9b7$var$_raycaster","Raycaster","$b9499708d6cce9b7$var$_tempVector","$b9499708d6cce9b7$var$_tempVector2","$b9499708d6cce9b7$var$_tempQuaternion","$b9499708d6cce9b7$var$_unit","X","Y","Z","$b9499708d6cce9b7$var$_changeEvent","$b9499708d6cce9b7$var$_mouseDownEvent","$b9499708d6cce9b7$var$_mouseUpEvent","mode","$b9499708d6cce9b7$var$_objectChangeEvent","$b9499708d6cce9b7$export$198e80c116632110","Object3D","camera","visible","_gizmo","$b9499708d6cce9b7$export$c2ae06a69fb9d31f","_plane","$b9499708d6cce9b7$export$c0ab73045548e2ca","defineProperty","propName","defaultValue","propValue","Object","get","value","worldPosition","worldPositionStart","worldQuaternion","worldQuaternionStart","cameraPosition","cameraQuaternion","pointStart","pointEnd","rotationAxis","eye","_offset","_startNorm","_endNorm","_cameraScale","_parentPosition","_parentQuaternion","_parentQuaternionInv","_parentScale","_worldScaleStart","_worldQuaternionInv","_worldScale","_positionStart","_quaternionStart","_scaleStart","_getPointer","$b9499708d6cce9b7$var$getPointer","bind","_onPointerDown","$b9499708d6cce9b7$var$onPointerDown","_onPointerHover","$b9499708d6cce9b7$var$onPointerHover","_onPointerMove","$b9499708d6cce9b7$var$onPointerMove","_onPointerUp","$b9499708d6cce9b7$var$onPointerUp","updateMatrixWorld","parent","matrixWorld","decompose","normalize","pointerHover","dragging","setFromCamera","intersect","$b9499708d6cce9b7$var$intersectObjectWithRay","picker","axis","name","pointerDown","planeIntersect","point","pointerMove","space","indexOf","z","divide","translationSnap","search","round","setFromMatrixPosition","d","multiply","scaleSnap","ROTATION_SPEED","rotationAngle","angleTo","cross","rotationSnap","setFromAxisAngle","pointerUp","traverse","child","geometry","material","attach","detach","getRaycaster","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","ownerDocument","pointerLockElement","rect","getBoundingClientRect","width","height","raycaster","includeInvisible","allIntersections","intersectObject","prototype","isTransformControls","$b9499708d6cce9b7$var$_tempEuler","Euler","$b9499708d6cce9b7$var$_alignVector","$b9499708d6cce9b7$var$_zeroVector","$b9499708d6cce9b7$var$_lookAtMatrix","Matrix4","$b9499708d6cce9b7$var$_tempQuaternion2","$b9499708d6cce9b7$var$_identityQuaternion","$b9499708d6cce9b7$var$_dirVector","$b9499708d6cce9b7$var$_tempMatrix","$b9499708d6cce9b7$var$_unitX","$b9499708d6cce9b7$var$_unitY","$b9499708d6cce9b7$var$_unitZ","$b9499708d6cce9b7$var$_v1","$b9499708d6cce9b7$var$_v2","$b9499708d6cce9b7$var$_v3","gizmoMaterial","MeshBasicMaterial","depthTest","depthWrite","fog","toneMapped","transparent","gizmoLineMaterial","LineBasicMaterial","matInvisible","opacity","matHelper","matRed","color","setHex","matGreen","matBlue","matRedTransparent","matGreenTransparent","matBlueTransparent","matWhiteTransparent","matYellowTransparent","matGray","arrowGeometry","CylinderGeometry","translate","scaleHandleGeometry","BoxGeometry","lineGeometry","BufferGeometry","setAttribute","Float32BufferAttribute","lineGeometry2","CircleGeometry","arc","TorusGeometry","rotateY","rotateX","gizmoTranslate","Mesh","XYZ","OctahedronGeometry","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","Line","TranslateHelperGeometry","gizmoRotate","XYZE","E","helperRotate","AXIS","pickerRotate","SphereGeometry","gizmoScale","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","rotation","tag","updateMatrix","tempGeometry","applyMatrix4","renderOrder","helper","force","handles","concat","children","handle","factor","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","abs","setFromRotationMatrix","atan2","multiplyQuaternions","showX","showY","showZ","_color","_opacity","split","some","a","setFromEuler","isTransformControlsGizmo","PlaneGeometry","wireframe","side","DoubleSide","isTransformControlsPlane","$5aae44c9b1864d53$var$Stats","container","createElement","addPanel","panel","appendChild","dom","showPanel","id","display","cssText","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","time","usedJSHeapSize","jsHeapSizeLimit","fg","bg","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","maxValue","drawImage","$5aae44c9b1864d53$export$2e2bcd8739ae039"],"version":3,"file":"goals.d2f7260e.js.map"}