{"mappings":"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","sources":["example/index.js"],"sourcesContent":["import {\n\tWebGLRenderer,\n\tPerspectiveCamera,\n\tColor,\n\tScene,\n\tDirectionalLight,\n\tAmbientLight,\n\tsRGBEncoding,\n\tGroup,\n\tRaycaster,\n\tVector2,\n\tVector4,\n\tMesh,\n\tSphereBufferGeometry,\n\tMeshBasicMaterial,\n\tPCFSoftShadowMap,\n\tBox3,\n\tSphere,\n\tVector3,\n} from 'three';\nimport {\n\tOrbitControls,\n} from 'three/examples/jsm/controls/OrbitControls.js';\nimport {\n\tTransformControls\n} from 'three/examples/jsm/controls/TransformControls.js';\nimport {\n\tGUI,\n} from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\nimport { mat4 } from 'gl-matrix';\nimport {\n\tSolver,\n\tWorkerSolver,\n\tLink,\n\tJoint,\n\tSOLVE_STATUS_NAMES,\n\tIKRootsHelper,\n\tsetUrdfFromIK,\n} from '../src/index.js';\nimport {\n\tloadATHLETE,\n\tloadRobonaut,\n\tloadStaubli,\n\tloadCuriosity,\n} from './loadModels.js';\n\nconst params = {\n\tsolve: true,\n\tdisplayMesh: true,\n\tdisplayIk: true,\n\tdisplayGoals: true,\n\tdisplayShadows: true,\n\tmodel: 'ATHLETE',\n\twebworker: true,\n};\n\nconst solverOptions = {\n\tuseSVD: false,\n\tmaxIterations: 3,\n\tdivergeThreshold: 0.05,\n\tstallThreshold: 1e-4,\n\ttranslationErrorClamp: 0.25,\n\trotationErrorClamp: 0.25,\n\ttranslationConvergeThreshold: 1e-3,\n\trotationConvergeThreshold: 1e-5,\n\trestPoseFactor: 0.025,\n};\n\nconst goalToLinkMap = new Map();\nconst linkToGoalMap = new Map();\nconst goals = [];\nconst goalIcons = [];\nlet selectedGoalIndex = - 1;\n\nlet loadId = 0;\nlet averageTime = 0;\nlet averageCount = 0;\nlet gui, stats;\nlet outputContainer, renderer, scene, camera, directionalLight;\nlet solver, ikHelper, drawThroughIkHelper, ikRoot, urdfRoot;\nlet controls, transformControls, targetObject;\nlet mouse = new Vector2();\nconst box = new Box3();\nconst sphere = new Sphere();\nconst vector = new Vector3();\n\ninit();\nrebuildGUI();\nloadModel( loadATHLETE() );\nrender();\n\nfunction init() {\n\n\tstats = new Stats();\n\tdocument.body.appendChild( stats.dom );\n\n\toutputContainer = document.getElementById( 'output' );\n\n\t// init renderer\n\trenderer = new WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.shadowMap.enabled = true;\n\trenderer.shadowMap.type = PCFSoftShadowMap;\n\trenderer.outputEncoding = sRGBEncoding;\n\tdocument.body.appendChild( renderer.domElement );\n\n\tcamera = new PerspectiveCamera( 50, window.innerWidth / window.innerHeight );\n\tcamera.position.set( 8, 8, 8 );\n\n\tscene = new Scene();\n\tscene.background = new Color( 0x131619 );\n\n\tdirectionalLight = new DirectionalLight();\n\tdirectionalLight.position.set( 1, 3, 2 );\n\tdirectionalLight.castShadow = true;\n\tdirectionalLight.shadow.mapSize.setScalar( 2048 );\n\tscene.add( directionalLight, directionalLight.target );\n\n\tconst ambientLight = new AmbientLight( 0x263238, 1 );\n\tscene.add( ambientLight );\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\ttransformControls = new TransformControls( camera, renderer.domElement );\n\ttransformControls.setSpace( 'local' );\n\tscene.add( transformControls );\n\n\ttransformControls.addEventListener( 'mouseDown', () => controls.enabled = false );\n\ttransformControls.addEventListener( 'mouseUp', () => controls.enabled = true );\n\n\ttargetObject = new Group();\n\ttargetObject.position.set( 0, 1, 1 );\n\tscene.add( targetObject );\n\ttransformControls.attach( targetObject );\n\n\twindow.addEventListener( 'resize', () => {\n\n\t\tconst w = window.innerWidth;\n\t\tconst h = window.innerHeight;\n\t\tconst aspect = w / h;\n\n\t\trenderer.setSize( w, h );\n\n\t\tcamera.aspect = aspect;\n\t\tcamera.updateProjectionMatrix();\n\n\t\tif ( ikHelper ) {\n\n\t\t\tikHelper.setResolution( window.innerWidth, window.innerHeight );\n\t\t\tdrawThroughIkHelper.setResolution( window.innerWidth, window.innerHeight );\n\n\t\t}\n\n\t} );\n\n\twindow.addEventListener( 'keydown', e => {\n\n\t\tswitch ( e.key ) {\n\n\t\t\tcase 'w':\n\t\t\t\ttransformControls.setMode( 'translate' );\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\t\ttransformControls.setMode( 'rotate' );\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\ttransformControls.setSpace( transformControls.space === 'local' ? 'world' : 'local' );\n\t\t\t\tbreak;\n\t\t\tcase 'f':\n\t\t\t\tcontrols.target.set( 0, 0, 0 );\n\t\t\t\tcontrols.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t} );\n\n\ttransformControls.addEventListener( 'mouseUp', () => {\n\n\t\tif ( selectedGoalIndex !== - 1 ) {\n\n\t\t\tconst goal = goals[ selectedGoalIndex ];\n\t\t\tconst ikLink = goalToLinkMap.get( goal );\n\t\t\tif ( ikLink ) {\n\n\t\t\t\tikLink.updateMatrixWorld();\n\n\t\t\t\tikLink.attachChild( goal );\n\t\t\t\tgoal.setPosition( ...goal.originalPosition );\n\t\t\t\tgoal.setQuaternion( ...goal.originalQuaternion );\n\t\t\t\tikLink.detachChild( goal );\n\n\t\t\t\ttargetObject.position.set( ...goal.position );\n\t\t\t\ttargetObject.quaternion.set( ...goal.quaternion );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\trenderer.domElement.addEventListener( 'pointerdown', e => {\n\n\t\tmouse.x = e.clientX;\n\t\tmouse.y = e.clientY;\n\n\t} );\n\n\trenderer.domElement.addEventListener( 'pointerup', e => {\n\n\t\tif ( Math.abs( e.clientX - mouse.x ) > 3 || Math.abs( e.clientY - mouse.y ) > 3 ) return;\n\n\t\tif ( ! urdfRoot ) return;\n\n\t\tconst { ikLink, result } = raycast( e );\n\n\t\tif ( ikLink === null ) {\n\n\t\t\tselectedGoalIndex = - 1;\n\n\t\t}\n\n\t\tif ( e.button === 2 ) {\n\n\t\t\tif ( ! ikLink ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( linkToGoalMap.has( ikLink ) ) {\n\n\t\t\t\tconst goal = linkToGoalMap.get( ikLink );\n\t\t\t\tdeleteGoal( goal );\n\n\t\t\t}\n\n\t\t\t// normal in world space\n\t\t\tconst norm4 = new Vector4();\n\t\t\tnorm4.copy( result.face.normal );\n\t\t\tnorm4.w = 0;\n\t\t\tnorm4.applyMatrix4( result.object.matrixWorld );\n\n\t\t\t// create look matrix\n\t\t\tconst lookMat = mat4.create();\n\t\t\tconst eyeVec = [ 0, 0, 0 ];\n\t\t\tconst posVec = norm4.toArray();\n\t\t\tlet upVec = [ 0, 1, 0 ];\n\t\t\tif ( Math.abs( posVec[ 1 ] ) > 0.9 ) {\n\n\t\t\t\tupVec = [ 0, 0, 1 ];\n\n\t\t\t}\n\n\t\t\tmat4.targetTo( lookMat, eyeVec, posVec, upVec );\n\n\t\t\t// The joint that's positioned at the surface of the mesh\n\t\t\tconst rootGoalJoint = new Joint();\n\t\t\trootGoalJoint.name = 'GoalRootJoint-' + ikLink.name;\n\t\t\trootGoalJoint.setPosition(\n\t\t\t\tresult.point.x,\n\t\t\t\tresult.point.y,\n\t\t\t\tresult.point.z,\n\t\t\t);\n\t\t\tmat4.getRotation( rootGoalJoint.quaternion, lookMat );\n\n\t\t\tconst goalLink = new Link();\n\t\t\trootGoalJoint.addChild( goalLink );\n\n\t\t\tconst goalJoint = new Joint();\n\t\t\trootGoalJoint.name = 'GoalJoint-' + ikLink.name;\n\t\t\tikLink.getWorldPosition( goalJoint.position );\n\t\t\tikLink.getWorldQuaternion( goalJoint.quaternion );\n\t\t\tgoalJoint.setMatrixNeedsUpdate();\n\n\t\t\tgoalLink.attachChild( goalJoint );\n\t\t\tgoalJoint.makeClosure( ikLink );\n\n\t\t\t// save the relative position\n\t\t\tikLink.attachChild( rootGoalJoint );\n\t\t\trootGoalJoint.originalPosition = rootGoalJoint.position.slice();\n\t\t\trootGoalJoint.originalQuaternion = rootGoalJoint.quaternion.slice();\n\t\t\tikLink.detachChild( rootGoalJoint );\n\n\t\t\t// update the solver\n\t\t\tsolver.updateStructure();\n\t\t\tikHelper.updateStructure();\n\t\t\tdrawThroughIkHelper.updateStructure();\n\n\t\t\ttargetObject.position.set( ...rootGoalJoint.position );\n\t\t\ttargetObject.quaternion.set( ...rootGoalJoint.quaternion );\n\n\t\t\tgoalToLinkMap.set( rootGoalJoint, ikLink );\n\t\t\tlinkToGoalMap.set( ikLink, rootGoalJoint );\n\t\t\tgoals.push( rootGoalJoint );\n\t\t\tselectedGoalIndex = goals.length - 1;\n\n\t\t} else if ( e.button === 0 ) {\n\n\t\t\tif ( ! transformControls.dragging ) {\n\n\t\t\t\tselectedGoalIndex = goalIcons.indexOf( result ? result.object.parent : null );\n\n\t\t\t\tif ( selectedGoalIndex !== - 1 ) {\n\n\t\t\t\t\tconst ikgoal = goals[ selectedGoalIndex ];\n\t\t\t\t\ttargetObject.position.set( ...ikgoal.position );\n\t\t\t\t\ttargetObject.quaternion.set( ...ikgoal.quaternion );\n\n\t\t\t\t} else if ( ikLink && linkToGoalMap.has( ikLink ) ) {\n\n\t\t\t\t\tconst goal = linkToGoalMap.get( ikLink );\n\t\t\t\t\tselectedGoalIndex = goals.indexOf( goal );\n\t\t\t\t\ttargetObject.position.set( ...goal.position );\n\t\t\t\t\ttargetObject.quaternion.set( ...goal.quaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\twindow.addEventListener( 'keydown', e => {\n\n\t\tif ( selectedGoalIndex !== - 1 && ( e.code === 'Delete' || e.code === 'Backspace' ) ) {\n\n\t\t\tdeleteGoal( goals[ selectedGoalIndex ] );\n\t\t\tselectedGoalIndex = - 1;\n\n\t\t}\n\n\t} );\n\n\tfunction deleteGoal( goal ) {\n\n\t\tconst index = goals.indexOf( goal );\n\t\tconst goalToRemove = goals[ index ];\n\t\tgoalToRemove.traverse( c => {\n\n\t\t\tif ( c.isClosure ) {\n\n\t\t\t\tc.removeChild( c.child );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tgoals.splice( index, 1 );\n\n\t\tconst link = goalToLinkMap.get( goalToRemove );\n\t\tgoalToLinkMap.delete( goalToRemove );\n\t\tlinkToGoalMap.delete( link );\n\n\t\tsolver.updateStructure();\n\t\tikHelper.updateStructure();\n\t\tdrawThroughIkHelper.updateStructure();\n\n\t}\n\n}\n\nfunction raycast( e ) {\n\n\tconst raycaster = new Raycaster();\n\tconst mouse = new Vector2();\n\tmouse.x = ( e.clientX / window.innerWidth ) * 2 - 1;\n\tmouse.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\n\n\traycaster.setFromCamera( mouse, camera );\n\n\tlet results;\n\tconst intersectGoals = [ ...goalIcons ];\n\tintersectGoals.length = goals.length;\n\tresults = raycaster.intersectObjects( intersectGoals, true );\n\tif ( results.length !== 0 ) {\n\n\t\treturn { ikLink: null, result: results[ 0 ] };\n\n\t}\n\n\tresults = raycaster.intersectObjects( [ urdfRoot ], true );\n\tif ( results.length === 0 ) {\n\n\t\treturn { ikLink: null, result: null };\n\n\t}\n\n\tconst result = results[ 0 ];\n\n\tlet nearestLink = null;\n\tlet ikLink = null;\n\tresult.object.traverseAncestors( p => {\n\n\t\tif ( nearestLink === null && p.isURDFLink ) {\n\n\t\t\tnearestLink = p;\n\t\t\tikRoot.traverse( c => {\n\n\t\t\t\tif ( c.name === nearestLink.name ) {\n\n\t\t\t\t\tikLink = c;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t} );\n\n\treturn { ikLink, result };\n\n}\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\n\tconst allGoals = goals;\n\tconst selectedGoal = allGoals[ selectedGoalIndex ];\n\tif ( ikRoot ) {\n\n\t\tif ( selectedGoal ) {\n\n\t\t\tselectedGoal.setPosition( targetObject.position.x, targetObject.position.y, targetObject.position.z );\n\t\t\tselectedGoal.setQuaternion( targetObject.quaternion.x, targetObject.quaternion.y, targetObject.quaternion.z, targetObject.quaternion.w );\n\n\t\t}\n\n\t\tif ( params.solve ) {\n\n\t\t\tconst startTime = window.performance.now();\n\t\t\tlet statuses;\n\t\t\tif ( solver instanceof WorkerSolver ) {\n\n\t\t\t\tsolver.updateFrameState( ...allGoals );\n\t\t\t\tsolver.updateSolverSettings( solverOptions );\n\n\t\t\t\tstatuses = solver.status;\n\t\t\t\tif ( ! solver.running ) {\n\n\t\t\t\t\tsolver.solve();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tObject.assign( solver, solverOptions );\n\t\t\t\tstatuses = solver.solve();\n\n\t\t\t}\n\n\t\t\tconst endTime = window.performance.now();\n\t\t\tconst deltaTime = endTime - startTime;\n\n\t\t\toutputContainer.innerText = `solve time \\t: ${ deltaTime.toFixed( 3 ) }ms\\n`;\n\n\t\t\tif ( averageCount < 50 ) {\n\n\t\t\t\taverageCount ++;\n\n\t\t\t}\n\n\t\t\taverageTime += ( deltaTime - averageTime ) / averageCount;\n\t\t\toutputContainer.innerText += `avg solve time \\t: ${ averageTime.toFixed( 3 ) }ms\\n`;\n\t\t\toutputContainer.innerText += statuses.map( s => SOLVE_STATUS_NAMES[ s ] ).join( '\\n' );\n\n\t\t\tsetUrdfFromIK( urdfRoot, ikRoot );\n\n\t\t}\n\n\t\turdfRoot.visible = params.displayMesh;\n\n\t\t// IKHelpers can have a lot of matrices to update so remove it from\n\t\t// the scene when not in use for performance.\n\t\tif ( ! params.displayIk && ikHelper.parent ) {\n\n\t\t\tscene.remove( ikHelper );\n\t\t\tscene.remove( drawThroughIkHelper );\n\n\t\t} else if ( params.displayIk && ! ikHelper.parent ) {\n\n\t\t\tscene.add( ikHelper );\n\t\t\tscene.add( drawThroughIkHelper );\n\n\t\t}\n\n\t}\n\n\twhile ( goalIcons.length < allGoals.length ) {\n\n\t\tconst color = new Color( 0xffca28 ).convertSRGBToLinear();\n\t\tconst group = new Group();\n\t\tconst mesh = new Mesh(\n\t\t\tnew SphereBufferGeometry( 0.05, 30, 30 ),\n\t\t\tnew MeshBasicMaterial( { color } ),\n\t\t);\n\t\tconst mesh2 = new Mesh(\n\t\t\tnew SphereBufferGeometry( 0.05, 30, 30 ),\n\t\t\tnew MeshBasicMaterial( {\n\t\t\t\tcolor,\n\t\t\t\topacity: 0.4,\n\t\t\t\ttransparent: true,\n\t\t\t\tdepthWrite: false,\n\t\t\t\tdepthTest: false,\n\t\t\t} ),\n\t\t);\n\n\t\t// consistent size in screen space.\n\t\tconst ogUpdateMatrix = mesh.updateMatrix;\n\t\tfunction updateMatrix( ...args ) {\n\n\t\t\tthis.scale.setScalar( this.position.distanceTo( camera.position ) * 0.15 );\n\t\t\togUpdateMatrix.call( this, ...args );\n\n\t\t}\n\n\t\tmesh.updateMatrix = updateMatrix;\n\t\tmesh2.updateMatrix = updateMatrix;\n\n\t\tgroup.add( mesh, mesh2 );\n\t\tscene.add( group );\n\t\tgoalIcons.push( group );\n\n\t}\n\n\tgoalIcons.forEach( g => g.visible = false );\n\tallGoals.forEach( ( g, i ) => {\n\n\t\tgoalIcons[ i ].position.set( ...g.position );\n\t\tgoalIcons[ i ].quaternion.set( ...g.quaternion );\n\t\tgoalIcons[ i ].visible = params.displayGoals;\n\n\t} );\n\n\ttransformControls.enabled = selectedGoalIndex !== - 1;\n\ttransformControls.visible = selectedGoalIndex !== - 1;\n\n\t// update light shadow to tightly encapsulate urdf\n\tif ( urdfRoot !== null ) {\n\n\t\t// get the bounding sphere\n\t\tbox.setFromObject( urdfRoot ).getBoundingSphere( sphere );\n\n\t\t// get light direction and put target at urdf center\n\t\tvector.subVectors( directionalLight.position, directionalLight.target.position );\n\t\tdirectionalLight.target.position.copy( sphere.center );\n\n\t\t// update light bounds\n\t\tconst shadowCam = directionalLight.shadow.camera;\n\t\tshadowCam.left = shadowCam.bottom = - sphere.radius;\n\t\tshadowCam.right = shadowCam.top = sphere.radius;\n\t\tshadowCam.near = 0;\n\t\tshadowCam.far = sphere.radius * 2;\n\t\tshadowCam.updateProjectionMatrix();\n\n\t\tvector.normalize().multiplyScalar( sphere.radius );\n\t\tdirectionalLight.position.addVectors( sphere.center, vector );\n\n\t}\n\n\tdirectionalLight.castShadow = params.displayShadows;\n\n\trenderer.render( scene, camera );\n\tstats.update();\n\n}\n\nfunction rebuildGUI() {\n\n\tif ( gui ) {\n\n\t\tgui.destroy();\n\n\t}\n\n\tif ( ! ikRoot ) return;\n\n\tgui = new GUI();\n\tgui.width = 350;\n\n\tgui.add( params, 'model', [ 'ATHLETE', 'Robonaut', 'Curiosity', 'Staubli' ] ).onChange( value => {\n\n\t\tlet promise = null;\n\t\tswitch ( value ) {\n\n\t\t\tcase 'ATHLETE':\n\t\t\t\tpromise = loadATHLETE();\n\t\t\t\tbreak;\n\n\t\t\tcase 'Robonaut':\n\t\t\t\tpromise = loadRobonaut();\n\t\t\t\tbreak;\n\n\t\t\tcase 'Curiosity':\n\t\t\t\tpromise = loadCuriosity();\n\t\t\t\tbreak;\n\n\t\t\tcase 'Staubli':\n\t\t\t\tpromise = loadStaubli();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tloadModel( promise );\n\n\t} );\n\tgui.add( params, 'displayMesh' ).name( 'display mesh' );\n\tgui.add( params, 'displayGoals' ).name( 'display goals' );\n\tgui.add( params, 'displayIk' ).name( 'display ik chains' );\n\tgui.add( params, 'displayShadows' ).name( 'shadows' );\n\tgui.add( params, 'webworker' ).onChange( v => {\n\n\t\tif ( v ) {\n\n\t\t\tsolver = new WorkerSolver( solver.roots );\n\n\t\t} else {\n\n\t\t\tsolver.dispose();\n\t\t\tsolver = new Solver( solver.roots );\n\n\t\t}\n\n\t} );\n\tgui.add( { reset: () => {\n\n\t\tlet promise = null;\n\t\tswitch ( params.model ) {\n\n\t\t\tcase 'ATHLETE':\n\t\t\t\tpromise = loadATHLETE();\n\t\t\t\tbreak;\n\n\t\t\tcase 'Robonaut':\n\t\t\t\tpromise = loadRobonaut();\n\t\t\t\tbreak;\n\n\t\t\tcase 'Curiosity':\n\t\t\t\tpromise = loadCuriosity();\n\t\t\t\tbreak;\n\n\t\t\tcase 'Staubli':\n\t\t\t\tpromise = loadStaubli();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tloadModel( promise );\n\n\t} }, 'reset' );\n\n\tconst solveFolder = gui.addFolder( 'solver' );\n\tsolveFolder.add( params, 'solve' ).onChange( v => {\n\n\t\tif ( ! v && solver instanceof WorkerSolver ) {\n\n\t\t\tsolver.stop();\n\n\t\t}\n\n\t} );\n\n\tsolveFolder.add( solverOptions, 'useSVD' );\n\tsolveFolder.add( solverOptions, 'maxIterations' ).min( 1 ).max( 10 ).step( 1 ).listen();\n\tsolveFolder.add( solverOptions, 'divergeThreshold' ).min( 0 ).max( 0.5 ).step( 1e-2 ).listen();\n\tsolveFolder.add( solverOptions, 'stallThreshold' ).min( 0 ).max( 0.01 ).step( 1e-4 ).listen();\n\tsolveFolder.add( solverOptions, 'translationErrorClamp' ).min( 1e-2 ).max( 1 ).listen();\n\tsolveFolder.add( solverOptions, 'rotationErrorClamp' ).min( 1e-2 ).max( 1 ).listen();\n\tsolveFolder.add( solverOptions, 'translationConvergeThreshold' ).min( 1e-3 ).max( 1e-1 ).listen();\n\tsolveFolder.add( solverOptions, 'rotationConvergeThreshold' ).min( 1e-5 ).max( 1e-2 ).listen();\n\tsolveFolder.add( solverOptions, 'restPoseFactor' ).min( 0 ).max( 0.25 ).step( 1e-2 ).listen();\n\tsolveFolder.open();\n\n}\n\nfunction dispose( c ) {\n\n\tif ( c.geometry ) {\n\n\t\tc.geometry.dispose();\n\n\t}\n\n\tif ( c.material ) {\n\n\t\tfunction disposeMaterial( material ) {\n\n\t\t\tmaterial.dispose();\n\t\t\tfor ( const key in material ) {\n\n\t\t\t\tif ( material[ key ] && material[ key ].isTexture ) {\n\n\t\t\t\t\tmaterial[ key ].dispose();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Array.isArray( c.material ) ) {\n\n\t\t\tc.material.forEach( disposeMaterial );\n\n\t\t} else {\n\n\t\t\tdisposeMaterial( c.material );\n\n\t\t}\n\n\n\t}\n\n}\n\nfunction loadModel( promise ) {\n\n\tif ( urdfRoot ) {\n\n\t\turdfRoot.traverse( dispose );\n\t\tdrawThroughIkHelper.traverse( dispose );\n\t\tikHelper.traverse( dispose );\n\n\t\tscene.remove( urdfRoot, drawThroughIkHelper, ikHelper );\n\n\t}\n\n\tikRoot = null;\n\turdfRoot = null;\n\tikHelper = null;\n\tdrawThroughIkHelper = null;\n\tgoals.length = 0;\n\tgoalToLinkMap.clear();\n\tlinkToGoalMap.clear();\n\tselectedGoalIndex = - 1;\n\n\tloadId ++;\n\tconst thisLoadId = loadId;\n\tpromise\n\t\t.then( ( { goalMap, urdf, ik, helperScale = 1 } ) => {\n\n\t\t\tif ( loadId !== thisLoadId ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tik.updateMatrixWorld( true );\n\n\t\t\t// create the helper\n\t\t\tikHelper = new IKRootsHelper( ik );\n\t\t\tikHelper.setJointScale( helperScale );\n\t\t\tikHelper.setResolution( window.innerWidth, window.innerHeight );\n\t\t\tikHelper.color.set( 0xe91e63 ).convertSRGBToLinear();\n\t\t\tikHelper.setColor( ikHelper.color );\n\n\t\t\tdrawThroughIkHelper = new IKRootsHelper( ik );\n\t\t\tdrawThroughIkHelper.setJointScale( helperScale );\n\t\t\tdrawThroughIkHelper.setResolution( window.innerWidth, window.innerHeight );\n\t\t\tdrawThroughIkHelper.color.set( 0xe91e63 ).convertSRGBToLinear();\n\t\t\tdrawThroughIkHelper.setColor( drawThroughIkHelper.color );\n\t\t\tdrawThroughIkHelper.setDrawThrough( true );\n\n\t\t\turdf.traverse( c => {\n\n\t\t\t\tc.castShadow = true;\n\t\t\t\tc.receiveShadow = true;\n\n\t\t\t} );\n\n\t\t\tscene.add( urdf, ikHelper, drawThroughIkHelper );\n\n\t\t\tconst loadedGoals = [];\n\t\t\tgoalMap.forEach( ( link, goal ) => {\n\n\t\t\t\tloadedGoals.push( goal );\n\t\t\t\tgoalToLinkMap.set( goal, link );\n\t\t\t\tlinkToGoalMap.set( link, goal );\n\n\t\t\t} );\n\n\t\t\tsolver = params.webworker ? new WorkerSolver( ik ) : new Solver( ik );\n\t\t\tsolver.maxIterations = 3;\n\t\t\tsolver.translationErrorClamp = 0.25;\n\t\t\tsolver.rotationErrorClamp = 0.25;\n\t\t\tsolver.restPoseFactor = 0.01;\n\t\t\tsolver.divergeThreshold = 0.05;\n\n\t\t\tif ( loadedGoals.length ) {\n\n\t\t\t\ttargetObject.position.set( ...loadedGoals[ 0 ].position );\n\t\t\t\ttargetObject.quaternion.set( ...loadedGoals[ 0 ].quaternion );\n\t\t\t\tselectedGoalIndex = 0;\n\n\t\t\t} else {\n\n\t\t\t\tselectedGoalIndex = - 1;\n\n\t\t\t}\n\n\t\t\tloadedGoals.forEach( g => {\n\n\t\t\t\tg.originalPosition = [ 0, 0, 0 ];\n\t\t\t\tg.originalQuaternion = [ 0, 0, 0, 1 ];\n\n\t\t\t} );\n\n\t\t\tikRoot = ik;\n\t\t\turdfRoot = urdf;\n\t\t\tgoals.push( ...loadedGoals );\n\n\t\t\trebuildGUI();\n\n\t\t} );\n\n}\n"],"names":["$393e677ed3c566ae$var$params","solve","displayMesh","displayIk","displayGoals","displayShadows","model","webworker","$393e677ed3c566ae$var$solverOptions","useSVD","maxIterations","divergeThreshold","stallThreshold","translationErrorClamp","rotationErrorClamp","translationConvergeThreshold","rotationConvergeThreshold","restPoseFactor","$393e677ed3c566ae$var$goalToLinkMap","Map","$393e677ed3c566ae$var$linkToGoalMap","$393e677ed3c566ae$var$goals","$393e677ed3c566ae$var$goalIcons","$393e677ed3c566ae$var$gui","$393e677ed3c566ae$var$stats","$393e677ed3c566ae$var$outputContainer","$393e677ed3c566ae$var$renderer","$393e677ed3c566ae$var$scene","$393e677ed3c566ae$var$camera","$393e677ed3c566ae$var$directionalLight","$393e677ed3c566ae$var$solver","$393e677ed3c566ae$var$ikHelper","$393e677ed3c566ae$var$drawThroughIkHelper","$393e677ed3c566ae$var$ikRoot","$393e677ed3c566ae$var$urdfRoot","$393e677ed3c566ae$var$controls","$393e677ed3c566ae$var$transformControls","$393e677ed3c566ae$var$targetObject","$393e677ed3c566ae$var$selectedGoalIndex","$393e677ed3c566ae$var$loadId","$393e677ed3c566ae$var$averageTime","$393e677ed3c566ae$var$averageCount","$393e677ed3c566ae$var$mouse","$ilwiq","Vector2","$393e677ed3c566ae$var$box","Box3","$393e677ed3c566ae$var$sphere","Sphere","$393e677ed3c566ae$var$vector","Vector3","$393e677ed3c566ae$var$rebuildGUI","destroy","$jiuw3","GUI","width","add","onChange","value","promise","$7coGQ","loadATHLETE","loadRobonaut","loadCuriosity","loadStaubli","$393e677ed3c566ae$var$loadModel","name","v","$4CEV9","WorkerSolver","roots","dispose","Solver","reset","solveFolder","addFolder","stop","min","max","step","listen","open","$393e677ed3c566ae$var$dispose","c","geometry","material","disposeMaterial","key","isTexture","Array","isArray","forEach","traverse","remove","length","clear","thisLoadId","then","goalMap","urdf","ik","helperScale","updateMatrixWorld","IKRootsHelper","setJointScale","setResolution","window","innerWidth","innerHeight","color","set","convertSRGBToLinear","setColor","setDrawThrough","castShadow","receiveShadow","loadedGoals","link","goal","push","position","quaternion","g","originalPosition","originalQuaternion","$7MGRS","default","document","body","appendChild","dom","getElementById","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","type","PCFSoftShadowMap","outputEncoding","sRGBEncoding","domElement","PerspectiveCamera","Scene","background","Color","DirectionalLight","shadow","mapSize","setScalar","target","ambientLight","AmbientLight","deleteGoal","index","indexOf","goalToRemove","isClosure","removeChild","child","splice","get","delete","updateStructure","$5Rd1x","OrbitControls","$fUhpq","TransformControls","setSpace","addEventListener","Group","attach","w","h","aspect","updateProjectionMatrix","e","setMode","space","update","ikLink","attachChild","setPosition","setQuaternion","detachChild","x","clientX","y","clientY","Math","abs","result","raycaster","Raycaster","mouse","results","setFromCamera","intersectGoals","intersectObjects","nearestLink","object","traverseAncestors","p","isURDFLink","$393e677ed3c566ae$var$raycast","button","has","norm4","Vector4","copy","face","normal","applyMatrix4","matrixWorld","lookMat","$6yEsn","mat4","create","eyeVec","posVec","toArray","upVec","targetTo","rootGoalJoint","Joint","point","z","getRotation","goalLink","Link","addChild","goalJoint","getWorldPosition","getWorldQuaternion","setMatrixNeedsUpdate","makeClosure","slice","dragging","parent","ikgoal","code","$393e677ed3c566ae$var$init","$393e677ed3c566ae$var$render","requestAnimationFrame","allGoals","selectedGoal","startTime","performance","now","statuses","updateFrameState","updateSolverSettings","status","running","Object","assign","deltaTime","innerText","toFixed","map","s","SOLVE_STATUS_NAMES","join","setUrdfFromIK","visible","group","mesh","Mesh","SphereBufferGeometry","MeshBasicMaterial","mesh2","opacity","transparent","depthWrite","depthTest","ogUpdateMatrix","updateMatrix","args","this","scale","distanceTo","call","i","setFromObject","getBoundingSphere","subVectors","center","shadowCam","camera","left","bottom","radius","right","top","near","far","normalize","multiplyScalar","addVectors","render"],"version":3,"file":"index.a869dc96.js.map"}